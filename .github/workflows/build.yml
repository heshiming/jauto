name: build

on:  
  push:
    tags:
      - v*

jobs:
  create_release:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
  build_release:
    name: build release
    needs: create_release
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            os_short: linux
            os_ext: so
            ar_ext: tar.gz
          - os: macos-latest
            os_short: macos
            os_ext: dylib
            ar_ext: tar.gz
          # - os: windows-latest
          #   os_short: win
          #   os_ext: dll
          #   ar_ext: zip
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3.3.0
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: ubuntu dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt install gcc-multilib g++-multilib
      - name: configure cmake x86_64
        run: cmake -B ${{github.workspace}}/build
      - name: configure cmake i386
        if: startsWith(matrix.os, 'ubuntu')
        run: CFLAGS="-m32" CXXFLAGS="-m32" cmake -B ${{github.workspace}}/build-i386
      # - name: configure cmake win-i386
      #   if: startsWith(matrix.os, 'windows')
      #   run: cmake -A Win32 -B ${{github.workspace}}\build-i386
      - name: build x86_64 
        run: cmake --build ${{github.workspace}}/build
      - name: build i386
        if: "!startsWith(matrix.os, 'macos')"
        run: cmake --build ${{github.workspace}}/build-i386
      - name: pack x86_64
        if: "!startsWith(matrix.os, 'windows')"
        run: tar -C ${{github.workspace}}/build -czvf ${{github.workspace}}/build/jauto-${{ github.ref_name }}-${{ matrix.os_short }}-x86_64.${{ matrix.ar_ext }} jauto.${{ matrix.os_ext }}
      # - name: pack win-x86_64
      #   if: "startsWith(matrix.os, 'windows')"
      #   run: cd ${{github.workspace}}\build\ && zip jauto-${{ github.ref_name }}-${{ matrix.os_short }}-x86_64.${{ matrix.ar_ext }} jauto.${{ matrix.os_ext }}
      - name: pack i386
        if: startsWith(matrix.os, 'ubuntu')
        run: tar -C ${{github.workspace}}/build-i386 -czvf ${{github.workspace}}/build-i386/jauto-${{ github.ref_name }}-${{ matrix.os_short }}-i386.${{ matrix.ar_ext }} jauto.${{ matrix.os_ext }}
      # - name: pack win-i386
      #   if: startsWith(matrix.os, 'windows')
      #   run: cd ${{github.workspace}}\build-i386\ && zip jauto-${{ github.ref_name }}-${{ matrix.os_short }}-i386.${{ matrix.ar_ext }} jauto.${{ matrix.os_ext }}
      - name: release x86_64
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: ${{github.workspace}}/build/jauto-${{ github.ref_name }}-${{ matrix.os_short }}-x86_64.${{ matrix.ar_ext }}
      - name: release i386
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.create_release.outputs.tag-name }}
          files: ${{github.workspace}}/build-i386/jauto-${{ github.ref_name }}-${{ matrix.os_short }}-i386.${{ matrix.ar_ext }}
